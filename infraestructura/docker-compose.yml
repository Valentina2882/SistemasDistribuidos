version: '3.8'

services:

  # Servidor Web (Proxy)
  webserver:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - orders_api
      - payments_api
      - products_api
      - shopping_api
    networks:
      - dev_network

  # Auditoría para la Base de Datos de Ordenes
  orders_db_dev:
    container_name: orders_db_dev
    build:
      context: .
      dockerfile: Dockerfile.audit_logs
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    volumes:
      - ./data/orders_data_dev:/var/lib/postgresql/data      # Directorio de datos
      - ./logs/orders:/var/log/postgresql  # Monta el directorio de logs
      - ./pg_logs/postgresql.conf:/etc/postgresql/postgresql.conf                    # Directorio para los logs
    ports:
      - "5100:5432"  # Aseguramos que el puerto esté disponible externamente
    networks:
      - dev_network

  # Auditoría para la Base de Datos de Pagos
  payments_db_dev:
    container_name: payments_db_dev
    build:
      context: .
      dockerfile: Dockerfile.audit_logs
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    volumes:
      - ./data/payments_data_dev:/var/lib/postgresql/data
      - ./logs/payments:/var/log/postgresql  # Monta el directorio de logs
      - ./pg_logs/postgresql.conf:/etc/postgresql/postgresql.conf   
    ports:
      - "5200:5432"
    networks:
      - dev_network

  # Auditoría para la Base de Datos de Productos
  products_db_dev:
    container_name: products_db_dev
    build:
      context: .
      dockerfile: Dockerfile.audit_logs
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    volumes:
      - ./data/products_data_dev:/var/lib/postgresql/data
      - ./logs/products:/var/log/postgresql  # Monta el directorio de logs
      - ./pg_logs/postgresql.conf:/etc/postgresql/postgresql.conf   
    ports:
      - "5300:5432"
    networks:
      - dev_network

  # Auditoría para la Base de Datos de Carrito de Compras
  shopping_db_dev:
    container_name: shopping_db_dev
    build:
      context: .
      dockerfile: Dockerfile.audit_logs
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    volumes:
      - ./data/shopping_data_dev:/var/lib/postgresql/data
      - ./logs/shopping:/var/log/postgresql  # Monta el directorio de logs
      - ./pg_logs/postgresql.conf:/etc/postgresql/postgresql.conf  
    ports:
      - "5400:5432"
    networks:
      - dev_network

  # API de Ordenes
  orders_api:
    build: 
      context: ./APIS
      dockerfile: Dockerfile.orders
    ports:
      - "3100:3100"
    environment:
      - DATABASE_URL=postgres://postgres:12345@orders_db_dev:5432/orders_db_dev?schema=public
    networks:
      - dev_network

  # API de Pagos
  payments_api:
    build: 
      context: ./APIS
      dockerfile: Dockerfile.payments
    ports:
      - "3200:3200"
    environment:
      - DATABASE_URL=postgres://postgres:12345@payments_db_dev:5432/payments_db_dev?schema=public
    networks:
      - dev_network

  # API de Productos
  products_api:
    build: 
      context: ./APIS
      dockerfile: Dockerfile.products
    ports:
      - "3300:3300"
    environment:
      - DATABASE_URL=postgres://postgres:12345@products_db_dev:5432/products_db_dev?schema=public
    networks:
      - dev_network

  # API de Carrito de Compras
  shopping_api:
    build: 
      context: ./APIS
      dockerfile: Dockerfile.shopping
    ports:
      - "3400:3400"
    environment:
      - DATABASE_URL=postgres://postgres:12345@shopping_db_dev:5432/shopping_db_dev?schema=public
    networks:
      - dev_network

  # pgAdmin para administrar bases de datos
  pgadmin:
    image: dpage/pgadmin4
    container_name: dev_pgadmin
    ports:
      - 8888:80
    environment:
      PGADMIN_DEFAULT_EMAIL: zare@zare.com
      PGADMIN_DEFAULT_PASSWORD: 12345
    networks:
      - dev_network

networks:
  dev_network:
    driver: bridge

volumes:
  orders_data_dev:
  payments_data_dev:
  products_data_dev:
  shopping_data_dev:
  db_audit:
